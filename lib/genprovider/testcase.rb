#
# testcase.rb
#

module Genprovider
  class Testcase
    def initialize c, namespace, out
      out.comment.comment "Testcase for #{namespace}:#{c.name}"
      out.comment.comment "Generated by 'genprovider' for use with cmpi-bindings-ruby"
      out.puts "require 'rubygems'"
      out.puts "require 'sfcc'"
      out.puts "require 'test/unit'"
      out.puts
      out.puts "class Test_#{c.name} < Test::Unit::TestCase"
      out.inc
      out.def "setup"
      out.puts "@client = Sfcc::Cim::Client.connect(:uri => 'https://wsman:secret@localhost:5989', :verify => false)"
      out.puts "@op = Sfcc::Cim::ObjectPath.new('#{namespace}', '#{c.name}')"
      out.end
      out.puts
      out.def "test_registered"
      out.puts "cimclass = @client.get_class(@op)"
      out.puts "assert cimclass"
      out.end
      out.puts
      out.def "test_instance_names"
      out.puts "names = @client.instance_names(@op)"
      out.puts "assert names.size > 0"
      out.puts "names.each do |ref|"
      out.inc
      out.puts "ref.namespace = @op.namespace"
      out.puts "instance = @client.get_instance ref"
      out.puts "assert instance"
      out.puts
      c.features.each do |p|
        next unless p.property?
        out.puts "assert instance.#{p.name}"
      end
      out.end
      out.end
      out.puts
      out.end # class
    end
  end
end
